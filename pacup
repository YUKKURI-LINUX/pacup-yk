#!/bin/bash

function usage() {
  cat <<EOM

Usage: $(basename $0) [-ayh]...

    -a    Run apt only.
    -y		Skip confirmations from apt.
    -h    Show this help.

EOM
}

function check_root() {
  sudo echo -n
  if [ $? != 0 ]; then
    echo "pacup: root privilege is needed."
    sudo echo -n
    if [ $? != 0 ]; then
      echo -e "pacup: ERR: Failed to get root privilege. Abort."
      exit 1
    fi
  fi
}

function PACUP_APT() {
  echo "pacup: (apt) Updating package list..."
  sudo apt-get update
  echo "pacup: (apt) Upgrading all packages... FLAGS: '$PACUP_YES'"
  sudo apt-get full-upgrade$PACUP_YES
  echo "pacup: (apt) Removing needless packages or broken packages... FLAGS: '$PACUP_YES'"
  sudo apt-get autoremove$PACUP_YES --fix-broken
}

function PACUP_SNAP() {
  if [ $(command -v snap) ]; then
    echo "pacup: (snap) Refreshing snap packages..."
    sudo snap refresh
  else
    echo "pacup: (snap) No installation of snap was found. Skipping."
  fi
}

function PACUP_FLTPK() {
  if [ $(command -v flatpak) ]; then
    echo "pacup: (flatpak) Updating packages... FLAGS: '$PACUP_YES'"
    flatpak --user update$PACUP_YES

    echo "pacup: (flatpak) Updating packages(system-wide installed)... FLAGS: '$PACUP_YES'"
    sudo flatpak update$PACUP_YES
  else
   echo "pacup: (flatpak) No installation of flatpak was found. Skipping."
  fi
}

while (($#>0)); do
  case $1 in
    a|-a|--apt)
      PACUP_MOD="apt"
      ;;
    y|-y|--yes)
      PACUP_YES=" -y"
      ;;
    h|-h|--help)
      usage
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
  esac
  shift
done

if [ "$PACUP_MOD" == "apt" ]; then
  check_root
  PACUP_APT
else
  check_root
  PACUP_APT
  PACUP_SNAP
  PACUP_FLTPK
fi

echo "pacup: Done."
exit 0
